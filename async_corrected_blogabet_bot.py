import re
import time
import asyncio
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.firefox.service import Service
from selenium.webdriver.firefox.options import Options
from telegram import Bot, error

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Bot
TELEGRAM_TOKEN = "7537676839:AAE3zmuL6ZWnZuNB43c4S8CqEkthOlWvALs"
bot = Bot(token=TELEGRAM_TOKEN)

# –°–ø–∏—Å–æ–∫ –∫–∞–ø–ø–µ—Ä–æ–≤ –∏ –∏—Ö —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–æ–≤
capper_channels = {
    "https://oskarok.blogabet.com/": "-1002358772434",
    # –î–æ–±–∞–≤–ª—è–π—Ç–µ –¥—Ä—É–≥–∏—Ö –∫–∞–ø–ø–µ—Ä–æ–≤ –∏ –∏—Ö –∫–∞–Ω–∞–ª—ã –∑–¥–µ—Å—å
    # 1 - —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞–ø–ø–µ—Ä–∞, 2 - id –∫–∞–Ω–∞–ª–∞/—á–∞—Ç–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–≥–Ω–æ–∑—ã
}

options = Options()
options.add_argument("--headless")  # –ó–∞–ø—É—Å–∫–∞–µ–º Firefox –≤ –±–µ–∑–≥–æ–ª–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
options.add_argument("--no-sandbox")
options.add_argument("--disable-gpu")
options.add_argument("--disable-dev-shm-usage")

# –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ geckodriver
service = Service("/usr/local/bin/geckodriver")
driver = webdriver.Firefox(service=service, options=options)

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
def login_to_blogabet():
    driver.get("https://blogabet.com/#login")
    time.sleep(2)

    # –¢—É—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ blogabet.com // –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTML –∫–æ–¥–∞
    driver.find_element("id", "email").send_keys("jasterelafis777@gmail.com")
    driver.find_element("id", "password").send_keys("Oz098a2HLp")
    driver.find_element("xpath", "//button[@type='submit']").click()

    time.sleep(5)

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¢–µ–ª–µ–≥—Ä–∞–º —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
async def send_message_with_retry(chat_id, message, retries=3, delay=5):
    for attempt in range(retries):
        try:
            await bot.send_message(chat_id=chat_id, text=message, parse_mode="Markdown")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {chat_id}")
            return
        except error.TimedOut:
            print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ {delay} —Å–µ–∫—É–Ω–¥...")
            await asyncio.sleep(delay)
    print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞
async def get_latest_pick_and_send():
    last_sent_pick_id = None

    while True:
        for capper_url, chat_id in capper_channels.items():
            driver.get(capper_url)
            time.sleep(5)

            # –ü–æ–ª—É—á–∞–µ–º HTML-–∫–æ–¥ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º BeautifulSoup –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
            soup = BeautifulSoup(driver.page_source, 'html.parser')
            pick_list = soup.find('ul', id='blogPickList')

            if not pick_list:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å id 'blogPickList' –¥–ª—è {capper_url}.")
                continue

            # –ë–µ—Ä–µ–º —Å–∞–º—ã–π –≤–µ—Ä—Ö–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑
            latest_bet = pick_list.find('li', class_='block media _feedPick feed-pick')
            if not latest_bet:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –¥–ª—è {capper_url}.")
                continue

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ –º—ã —ç—Ç–æ—Ç –ø—Ä–æ–≥–Ω–æ–∑ —Ä–∞–Ω–µ–µ
            pick_id = latest_bet.get("id")
            if pick_id == last_sent_pick_id:
                print("–ù–æ–≤—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –Ω–µ—Ç. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥.")
                continue

            last_sent_pick_id = pick_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞

            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥–Ω–æ–∑–µ
            title = latest_bet.find('h3').get_text(strip=True)
            bet_info = latest_bet.find('div', class_='pick-line').get_text(strip=True)
            odd = latest_bet.find('span', class_='feed-odd').get_text(strip=True)
            sport_info = latest_bet.find('div', class_='sport-line').get_text(strip=True)

            # –£–¥–∞–ª—è–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∏–∑ bet_info
            bet_info = re.sub(r"@\s*\d+(\.\d+)?", "", bet_info).strip()

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏
            message = (
                f"üì¢ **–ù–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞**\n"
                f"üèÜ **–ú–∞—Ç—á**: {title}\n"
                f"üí¨ **–°—Ç–∞–≤–∫–∞**: {bet_info}\n"
                f"üí∞ **–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç**: {odd}\n"
                f"‚öΩ **–°–ø–æ—Ä—Ç**: {sport_info}"
            )

            # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
            await send_message_with_retry(chat_id, message)

        # –ñ–¥–µ–º 30 —Å–µ–∫ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        await asyncio.sleep(30)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
async def main():
    login_to_blogabet()
    await get_latest_pick_and_send()

# –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
asyncio.run(main())